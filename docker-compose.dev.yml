services:
  db:
    image: postgres
    container_name: sandbox_db
    restart: always
    environment:
      POSTGRES_DB: sandbox_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sandboxpassword
    ports:
      - 5450:5432
    volumes:
      - .data:/var/lib/postgresql

  web:
    container_name: sandbox_web
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8020:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - elasticsearch
    environment:
      - ELASTICSEARCH_DSL_HOSTS=http://elasticsearch:9200

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: sandbox_elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_PASSWORD=elasticpassword
      - xpack.security.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elastic_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: sandbox_kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elastic_network

volumes:
  esdata:
    driver: local

networks:
  elastic_network:
    driver: bridge
